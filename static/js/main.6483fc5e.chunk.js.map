{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/Form2.js","components/TodoItems.js","components/TodoItemList.js","components/TodoScore.js","components/TodoScoreList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","form2","children","children2","class","className","Form","onCreate","onRemove","onClick","onCalculate","TodoItem","nextProps","nextState","this","props","change","text","id","onPress1","onPress2","onPress3","onPress4","Component","TodoItemList","todos","todoList","map","score","TodoScore","TodoScoreList","App","state","shistory","handleCreate","setState","concat","handleCalculate","nextTodos","i","length","selected","ch_val","parseInt","handlePlusOne","index","findIndex","todo","handlePlusTen","handleMinusOne","handleMinusTen","handleRemove","filter","handleRemove2","Form2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6483fc5e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoListTemplate = ({form, form2, children, children2}) => {\r\n  return (\r\n    <main class=\"bg-gradient-to-r from-purple-50 to-purple-100\">\r\n      <div class=\"text-center bg-white\">\r\n        <p class=\"py-3 mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\r\n          Score\r\n        </p>\r\n      </div>\r\n      <section class=\"py-3\">\r\n        { children }\r\n      </section>\r\n      <section class=\"text-center py-1\">\r\n        { form2 }\r\n      </section>\r\n      <section className=\"score-wrapper\">\r\n        { children2 }\r\n      </section>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react'\r\n\r\nconst Form = ({ onCreate, onRemove }) => {\r\n    return (\r\n        <div class=\"py-3 text-center\">\r\n            <button class=\"py-2 px-4 bg-gray-600 text-white font-semibold rounded-lg shadow-md active:bg-black focus:outline-none\" onClick={onCreate}>\r\n                추가\r\n            </button>\r\n            <span class=\"p-1\"></span>\r\n            <button class=\"py-2 px-4 bg-gray-600 text-white font-semibold rounded-lg shadow-md active:bg-black focus:outline-none\" onClick={onRemove}>\r\n                제외\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Form = ({ onCalculate}) => {\r\n    return (\r\n        <div className=\"form\">\r\n            <button class=\"py-2 px-4 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:bg-red-500 focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2 focus-visible:ring-opacity-75\" onClick={onCalculate}>\r\n                Calculate\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from \"react\";\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.change !== nextProps.change;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      text,\r\n      change,\r\n      id,\r\n      onPress1,\r\n      onPress2,\r\n      onPress3,\r\n      onPress4,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div class=\"flex flex-row overflow-hidden bg-gradient-to-r from-purple-200 to-purple-300 py-1\">\r\n        <div class=\"p-2 bg-gray-200\">\r\n          {text} \r\n        </div>\r\n        <div class=\"p-2\"> : </div>\r\n        <div class=\"p-2 bg-gray-200\">{change}</div>\r\n            <span class=\"p-1\"></span>\r\n            <button\r\n            class=\"py-2 px-4 bg-emerald-500 text-white font-semibold rounded-lg shadow-md active:bg-emerald-700 focus:outline-none\"\r\n            onClick={() => onPress1(id)}\r\n            >\r\n            +1\r\n            </button>\r\n            <span class=\"p-1\"></span>\r\n            <button\r\n            class=\"py-2 px-4 bg-emerald-500 text-white font-semibold rounded-lg shadow-md active:bg-emerald-700 focus:outline-none\"\r\n            onClick={() => onPress2(id)}\r\n            >\r\n            +10\r\n            </button>\r\n            <span class=\"p-1\"></span>\r\n            <button class=\"py-2 px-4 bg-amber-500 text-white font-semibold rounded-lg shadow-md focus:bg-amber-600 focus:outline-none\" onClick={() => onPress3(id)}>\r\n            -1\r\n            </button>\r\n            <span class=\"p-1\"></span>\r\n            <button class=\"py-2 px-4 bg-amber-500 text-white font-semibold rounded-lg shadow-md focus:bg-amber-600 focus:outline-none\" onClick={() => onPress4(id)}>\r\n            -10\r\n            </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItems';\r\n\r\nclass TodoItemList extends Component {\r\n    \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props;\r\n    const { onPress1, onPress2, onPress3, onPress4 } = this.props;\r\n\r\n    const todoList = todos.map(\r\n        ({ id, text, score, change }) =>(\r\n            <TodoItem\r\n                id={id}\r\n                text={text}\r\n                score={score}\r\n                key={id}\r\n                change={change}\r\n                onPress1={onPress1}\r\n                onPress2={onPress2}\r\n                onPress3={onPress3}\r\n                onPress4={onPress4}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className=\"gentle-flex\">\r\n            {todoList}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from \"react\";\r\n\r\nclass TodoScore extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.score !== nextProps.score;\r\n  }\r\n\r\n  render() {\r\n    const { text, score } = this.props;\r\n\r\n    return (\r\n      <div class=\"flex py-3\">\r\n        <div class=\"ml-4 bg-gray-200 min-w-full\">\r\n          <dt class=\"text-lg leading-6 font-medium text-gray-500\">{text}</dt>\r\n          <dd class=\"mt-2 text-base text-gray-900\">{score}</dd>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoScore;\r\n","import React, { Component } from 'react';\r\nimport TodoScore from './TodoScore';\r\n\r\nclass TodoScoreList extends Component {\r\n    \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props;\r\n\r\n    const todoList = todos.map(\r\n        ({ id, score, text }) =>(\r\n            <TodoScore\r\n                id={id}\r\n                text={text}\r\n                score={score}\r\n                key={id}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div class=\"grid grid-cols-2 gap-x-8 gap-y-10\">\r\n            {todoList}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoScoreList;","import React, { Component } from 'react'\nimport TodoListTemplate from './components/TodoListTemplate'\nimport Form from './components/Form'\nimport Form2 from './components/Form2'\nimport TodoItemList from './components/TodoItemList'\nimport TodoScoreList from './components/TodoScoreList'\nclass App extends Component {\n    id = 4 // 이미 0,1,2,3 가 존재하므로 4으로 설정\n\n    state = {\n        todos: [\n            { id: 0, text: 'P1', score: '0', change: '0' },\n            { id: 1, text: 'P2', score: '0', change: '0' },\n            { id: 2, text: 'P3', score: '0', change: '0' },\n            { id: 3, text: 'P4', score: '0', change: '0' },\n        ],\n        shistory: [],\n    }\n\n    handleCreate = () => {\n        const { todos } = this.state\n        this.setState({\n            todos: todos.concat({\n                id: this.id++,\n                text: 'P' + this.id,\n                score: '0',\n                change: '0'\n            }),\n        })\n    }\n    handleCalculate = () => {\n        const { todos } = this.state\n        const nextTodos = [...todos]; // 배열을 복사\n        for (var i=0;nextTodos.length > i; i++){\n            const selected = todos[i];\n            const ch_val = parseInt(selected.change);\n            nextTodos[i] = {\n                ...selected,\n                score : parseInt(selected.score)+ch_val,\n                change : '0'\n            }\n        }\n        this.setState({\n          todos: nextTodos\n        });\n    }\n\n    handlePlusOne = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)+1\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handlePlusTen = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)+10\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handleMinusOne = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)-1\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handleMinusTen = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)-10\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n\n    handleRemove = () => {\n        const { todos } = this.state\n        this.id--\n        this.setState({\n            todos: todos.filter((todo) => todo.id !== this.id),\n        })\n    }\n\n    handleRemove2 = (id) => {\n        const { todos } = this.state\n        this.setState({\n            todos: todos.filter((todo) => todo.id !== id),\n        })\n    }\n    render() {\n        const { todos } = this.state\n        const {\n            handleCreate,\n            handleRemove,\n            handleRemove2,\n            handleCalculate,\n            handlePlusOne,\n            handlePlusTen,\n            handleMinusOne,\n            handleMinusTen,\n        } = this\n\n        return (\n            <TodoListTemplate\n                form={<Form onRemove={handleRemove} onCreate={handleCreate} />}\n                form2={<Form2 onCalculate={handleCalculate} />}\n                children={\n                    <TodoItemList todos={todos} onPress1={handlePlusOne} onPress2={handlePlusTen} onPress3={handleMinusOne} onPress4={handleMinusTen} />\n                }\n                children2={\n                    <TodoScoreList todos={todos} onRemove={handleRemove2} />\n                }\n            ></TodoListTemplate>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}