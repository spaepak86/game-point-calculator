{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/Form2.js","components/TodoItems.js","components/TodoItemList.js","components/TodoScore.js","components/TodoScoreList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","form2","children","children2","className","Form","onCreate","onRemove","size","type","onPress","onCalculate","TodoItem","nextProps","nextState","this","props","change","text","id","onPress1","onPress2","onPress3","onPress4","Component","TodoItemList","todos","todoList","map","score","TodoScore","View","TodoScoreList","App","state","shistory","handleCreate","setState","concat","handleCalculate","nextTodos","i","length","selected","ch_val","parseInt","handlePlusOne","index","findIndex","todo","handlePlusTen","handleMinusOne","handleMinusTen","handleRemove","filter","handleRemove2","Form2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd6d0bce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({form, form2, children, children2}) => {\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        Score\r\n      </div>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n      <section className=\"form-wrapper\">\r\n        { form2 }\r\n      </section>\r\n      <section className=\"score-wrapper\">\r\n        { children2 }\r\n      </section>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react'\r\nimport './Form.css'\r\nimport { AwesomeButton } from 'react-awesome-button'\r\n\r\nconst Form = ({ onCreate, onRemove }) => {\r\n    return (\r\n        <div className=\"form\">\r\n            <AwesomeButton size=\"small\" type=\"primary\" onPress={onCreate}>\r\n                추가\r\n            </AwesomeButton>\r\n            <span className=\"cross\"></span>\r\n            <AwesomeButton size=\"small\" type=\"secondary\" onPress={onRemove}>\r\n                제외\r\n            </AwesomeButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport './Form.css'\r\nimport { AwesomeButton } from 'react-awesome-button'\r\n\r\nconst Form = ({ onCalculate}) => {\r\n    return (\r\n        <div className=\"form\">\r\n            <AwesomeButton size=\"large\" type=\"anchor\" onPress={onCalculate}>\r\n                Calculate\r\n            </AwesomeButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react';\r\nimport './TodoItems.css';\r\nimport { AwesomeButton } from 'react-awesome-button'\r\nimport 'react-awesome-button/dist/themes/theme-blue.css'\r\n\r\nclass TodoItem extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.change !== nextProps.change;\r\n    }    \r\n\r\n    render() {\r\n        const { text, change,  id, onPress1, onPress2, onPress3, onPress4 } = this.props;\r\n\r\n        return (\r\n        <div className=\"todo-item\">\r\n            <div className=\"todo-text\">\r\n            {text} : {change}\r\n            </div>\r\n            <span className=\"cross\"></span>\r\n            <AwesomeButton size=\"small\" type=\"primary\" onPress={() => onPress1(id)}>\r\n                +1\r\n            </AwesomeButton>\r\n            <span className=\"cross\"></span>\r\n            <AwesomeButton size=\"small\" type=\"primary\" onPress={() => onPress2(id)}>\r\n                +10\r\n            </AwesomeButton>\r\n            <span className=\"cross\"></span>\r\n            <AwesomeButton size=\"small\" type=\"secondary\" onPress={() => onPress3(id)}>\r\n                -1\r\n            </AwesomeButton>\r\n            <span className=\"cross\"></span>\r\n            <AwesomeButton size=\"small\" type=\"secondary\" onPress={() => onPress4(id)}>\r\n                -10\r\n            </AwesomeButton>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItems';\r\n\r\nclass TodoItemList extends Component {\r\n    \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props;\r\n    const { onPress1, onPress2, onPress3, onPress4 } = this.props;\r\n\r\n    const todoList = todos.map(\r\n        ({ id, text, score, change }) =>(\r\n            <TodoItem\r\n                id={id}\r\n                text={text}\r\n                score={score}\r\n                key={id}\r\n                change={change}\r\n                onPress1={onPress1}\r\n                onPress2={onPress2}\r\n                onPress3={onPress3}\r\n                onPress4={onPress4}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {todoList}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react'\r\nimport { View } from 'react-native';\r\nimport './TodoScore.css'\r\n\r\nclass TodoScore extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.score !== nextProps.score\r\n    }\r\n\r\n    render() {\r\n        const { text, score } = this.props\r\n\r\n        return (\r\n            <div className=\"todo-score\">\r\n                <View>\r\n               {text} </View>\r\n               <View> {score}</View>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoScore\r\n","import React, { Component } from 'react';\r\nimport TodoScore from './TodoScore';\r\nimport './TodoScoreList.css';\r\n\r\nclass TodoScoreList extends Component {\r\n    \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() {\r\n    const { todos } = this.props;\r\n\r\n    const todoList = todos.map(\r\n        ({ id, score, text }) =>(\r\n            <TodoScore\r\n                id={id}\r\n                text={text}\r\n                score={score}\r\n                key={id}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className=\"score-list\">\r\n            {todoList}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoScoreList;","import React, { Component } from 'react'\nimport TodoListTemplate from './components/TodoListTemplate'\nimport Form from './components/Form'\nimport Form2 from './components/Form2'\nimport TodoItemList from './components/TodoItemList'\nimport TodoScoreList from './components/TodoScoreList'\nimport 'react-awesome-button/dist/themes/theme-blue.css'\nclass App extends Component {\n    id = 4 // 이미 0,1,2,3 가 존재하므로 4으로 설정\n\n    state = {\n        todos: [\n            { id: 0, text: 'P1', score: '0', change: '0' },\n            { id: 1, text: 'P2', score: '0', change: '0' },\n            { id: 2, text: 'P3', score: '0', change: '0' },\n            { id: 3, text: 'P4', score: '0', change: '0' },\n        ],\n        shistory: [],\n    }\n\n    handleCreate = () => {\n        const { todos } = this.state\n        this.setState({\n            todos: todos.concat({\n                id: this.id++,\n                text: 'P' + this.id,\n                score: '0',\n                change: '0'\n            }),\n        })\n    }\n    handleCalculate = () => {\n        const { todos } = this.state\n        const nextTodos = [...todos]; // 배열을 복사\n        for (var i=0;nextTodos.length > i; i++){\n            const selected = todos[i];\n            const ch_val = parseInt(selected.change);\n            nextTodos[i] = {\n                ...selected,\n                score : parseInt(selected.score)+ch_val,\n                change : '0'\n            }\n        }\n        this.setState({\n          todos: nextTodos\n        });\n    }\n\n    handlePlusOne = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)+1\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handlePlusTen = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)+10\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handleMinusOne = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)-1\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n    \n    handleMinusTen = (id) => {\n        const { todos } = this.state;\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n    \n        const nextTodos = [...todos]; // 배열을 복사\n            \n        // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n        nextTodos[index] = { \n          ...selected, \n          change: parseInt(selected.change)-10\n        };\n    \n        this.setState({\n          todos: nextTodos\n        });\n    }\n\n    handleRemove = () => {\n        const { todos } = this.state\n        this.id--\n        this.setState({\n            todos: todos.filter((todo) => todo.id !== this.id),\n        })\n    }\n\n    handleRemove2 = (id) => {\n        const { todos } = this.state\n        this.setState({\n            todos: todos.filter((todo) => todo.id !== id),\n        })\n    }\n    render() {\n        const { todos } = this.state\n        const {\n            handleCreate,\n            handleRemove,\n            handleRemove2,\n            handleCalculate,\n            handlePlusOne,\n            handlePlusTen,\n            handleMinusOne,\n            handleMinusTen,\n        } = this\n\n        return (\n            <TodoListTemplate\n                form={<Form onRemove={handleRemove} onCreate={handleCreate} />}\n                form2={<Form2 onCalculate={handleCalculate} />}\n                children={\n                    <TodoItemList todos={todos} onPress1={handlePlusOne} onPress2={handlePlusTen} onPress3={handleMinusOne} onPress4={handleMinusTen} />\n                }\n                children2={\n                    <TodoScoreList todos={todos} onRemove={handleRemove2} />\n                }\n            ></TodoListTemplate>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}